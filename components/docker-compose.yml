version: "3.8"

services:
  ems:
    build:
      context: ./backend/ems
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    depends_on:
      ems-postgres:
        condition: service_healthy
    environment:
      APP_SWAGGER_ON: ${APP_SWAGGER_ON:-True}
      APP_IS_DEV: ${APP_IS_DEV:-True}
      DATABASE_NAME: ${DATABASE_NAME:-dev_ems}
      DATABASE_HOST: ${DATABASE_HOST:-ems-postgres}
      DATABASE_PORT: ${DATABASE_PORT:-5432}
      DATABASE_USER: ${DATABASE_USER:-postgres}
      DATABASE_PASS: ${DATABASE_PASS:-postgres}
    command:
      - /bin/sh
      - -c
      - |
        python -m ems.composites.alembic_runner upgrade head &&\
        gunicorn ems.composites.http_api:app --workers 2 --worker-class uvicorn.workers.UvicornWorker --bind 0.0.0.0:3000
    volumes:
      - /var/www/ems/public:${PUBLIC_DIR_PATH:-/var/www/ems/public}
  ems-postgres:
    image: postgres:16.0
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: ${DATABASE_USER:-postgres}
      POSTGRES_PASSWORD: ${DATABASE_PASS:-postgres}
      POSTGRES_DB: ${DATABASE_NAME:-dev_ems}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
  client:
    build:
      context: ./frontend/ems
      dockerfile: Dockerfile
      args:
        REACT_APP_BASE_URL: ${REACT_APP_BASE_URL:-http://localhost:3000}
        REACT_APP_ENV: ${REACT_APP_ENV:-dev}
    restart: always
    ports:
      - '30002:30002'