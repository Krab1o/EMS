services:
  ems:
    container_name: ems
    build: ./backend/ems
    ports:
      - 3000:3000
    depends_on:
      ems-postgres:
        condition: service_healthy
    environment:
      APP_SWAGGER_ON: ${APP_SWAGGER_ON:-True}
      APP_IS_DEV: ${APP_IS_DEV:-True}
      APP_LOGGING_LEVEL: ${APP_LOGGING_LEVEL:-DEBUG}
      LOGGING_LEVEL: ${LOGGING_LEVEL:-DEBUG}
      GOOGLE_OAUTH_SECRET: ${GOOGLE_OAUTH_SECRET?please set}
      GOOGLE_OAUTH_CLIENT_ID: ${GOOGLE_OAUTH_CLIENT_ID?plase set}
      DATABASE_NAME: ${DATABASE_NAME:-dev_ems}
      DATABASE_HOST: ${DATABASE_HOST:-ems-postgres}
      DATABASE_PORT: ${DATABASE_PORT:-5432}
      DATABASE_USER: ${DATABASE_USER:-postgres}
      DATABASE_PASS: ${DATABASE_PASS:-postgres}
      PUBLIC_DIR_PATH: /app/public
    command: ${FLAGS:-}
    volumes:
      - ./backend/ems/public/images/covers:/app/public/images/covers
  ems-postgres:
    image: postgres:16.0
    container_name: ems-postgres
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: ${DATABASE_USER:-postgres}
      POSTGRES_PASSWORD: ${DATABASE_PASS:-postgres}
      POSTGRES_DB: ${DATABASE_NAME:-dev_ems}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - ./backend/ems/db/data:/var/lib/postgresql/data
  client:
    container_name: ems-client
    build:
      context: ./frontend/ems
      dockerfile: Dockerfile
      args:
        REACT_APP_BASE_URL: ${REACT_APP_BASE_URL:-http://localhost:3000}
        REACT_APP_ENV: ${REACT_APP_ENV:-dev}
    restart: always
    ports:
      - '30002:30002'
  redis:
    container_name: redis
    build:
      context: ./redis
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "redis-cli", "raw", "incr", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
