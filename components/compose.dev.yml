version: '3.8'

services:
  # Backend service (unchanged)
  ems:
    container_name: ems-dev
    build: ./backend/ems
    ports:
      - "3000:3000"
    depends_on:
      ems-postgres:
        condition: service_healthy
    environment:
      APP_SWAGGER_ON: ${APP_SWAGGER_ON:-True}
      APP_IS_DEV: ${APP_IS_DEV:-True}
      APP_LOGGING_LEVEL: ${APP_LOGGING_LEVEL:-DEBUG}
      LOGGING_LEVEL: ${LOGGING_LEVEL:-DEBUG}
      DATABASE_NAME: ${DATABASE_NAME:-dev_ems}
      DATABASE_HOST: ${DATABASE_HOST:-ems-postgres}
      DATABASE_PORT: ${DATABASE_PORT:-5432}
      DATABASE_USER: ${DATABASE_USER:-postgres}
      DATABASE_PASS: ${DATABASE_PASS:-postgres}
      PUBLIC_DIR_PATH: /app/public
    command: ${FLAGS:---reload} 
    volumes:
      - ./backend/ems/public/images/covers:/app/public/images/covers
      - ./backend/ems/src:/app/src

  # PostgreSQL service (unchanged)
  ems-postgres:
    container_name: ems-dev-postgres
    image: postgres:16.0
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${DATABASE_USER:-postgres}
      POSTGRES_PASSWORD: ${DATABASE_PASS:-postgres}
      POSTGRES_DB: ${DATABASE_NAME:-dev_ems}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - ./backend/ems/db/data:/var/lib/postgresql/data

  # Frontend React client with hot-reload
  client:
    container_name: ems-dev-client
    build:
      context: ./frontend/ems
      dockerfile: Dockerfile  # Use the development Dockerfile for hot-reload
    ports:
      - "30002:30002"  # React dev server port
    environment:
      - PORT=30002
      - REACT_APP_BASE_URL=${REACT_APP_BASE_URL:-http://localhost:3000}
      - REACT_APP_ENV=${REACT_APP_ENV:-dev}
    volumes:
      - ./frontend/ems/src:/app/src  # Mount source code for hot-reload
      - /app/node_modules  # Prevent node_modules from being overwritten
    restart: always

  # Redis service (unchanged)
  redis:
    container_name: redis-dev
    build:
      context: ./redis
    restart: always
    ports:
      - "6379:6379"
      - "8080:8001"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
